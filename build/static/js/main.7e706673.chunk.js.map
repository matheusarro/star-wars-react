{"version":3,"sources":["components/atoms/Navigation.jsx","pages/HomePage.jsx","adapters/swapiAdapters.js","adapters/swapiServices.js","components/atoms/CharacterCard.jsx","pages/PeoplePage.jsx","components/atoms/UnderConstruction.jsx","pages/PlanetsPage.jsx","pages/StarshipsPage.jsx","pages/VehiclesPage.jsx","pages/FilmsPage.jsx","pages/SpeciesPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Container","styled","div","Logo","Menu","NavOption","NavLink","Navigation","to","src","alt","activeStyle","color","PhotoContainer","HomePage","api","axios","create","baseURL","apiGetPeople","page","a","get","people","data","console","error","apiGetSpecificPlanet","planetId","planet","fetchPeoplePage","characters","results","map","character","charId","url","split","worldId","homeworld","id","name","toUpperCase","birth_year","homeworld_id","worldsList","char","filteredworldsList","filter","world","index","indexOf","filteredWorldsInfo","worldInfo","push","next","Photo","Info","CharName","span","CharDetail","CharacterCard","CardsContainer","IconContainer","ChevronDown","IoChevronDownOutline","PeoplePage","useState","charactersList","setCharactersList","exhibitionList","setExhibitionList","apiPage","setApiPage","exhibitionPage","setExhibitionPage","nextApiPage","setNextApiPage","useEffect","newCharacters","getCharacters","newExhibitionList","forEach","length","size","title","onClick","Construct","IoConstructOutline","Text","UnderConstruction","PlanetsPage","StarshipsPage","VehiclesPage","FilmsPage","SpeciesPage","AppContainer","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e706673.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-left: 2rem;\r\n  margin-right: 2rem;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst NavOption = styled(NavLink)`\r\n  color: gold;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-right: 2rem;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Navigation = () => {\r\n\r\n  return(\r\n    <>\r\n      <Container>\r\n        <NavLink to='/'>\r\n          <Logo>\r\n            <img src=\"./img/starwars.png\" alt=\"Star Wars Logo\"></img>\r\n          </Logo>\r\n        </NavLink>\r\n        <Menu>\r\n            <NavOption to='/people' activeStyle={{color: 'white'}}>PERSONAGENS</NavOption>\r\n            <NavOption to='/planets' activeStyle={{color: 'white'}}>PLANETAS</NavOption>\r\n            <NavOption to='/starships' activeStyle={{color: 'white'}}>NAVES</NavOption>\r\n            <NavOption to='/vehicles' activeStyle={{color: 'white'}}>VEÍCULOS</NavOption>\r\n            <NavOption to='/species' activeStyle={{color: 'white'}}>ESPÉCIES</NavOption>\r\n            <NavOption to='/films' activeStyle={{color: 'white'}}>FILMES</NavOption>\r\n        </Menu>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst PhotoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Container>\r\n      <PhotoContainer>\r\n        <img src={'./img/welcome.png'} alt={'Welcome'}></img>\r\n      </PhotoContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nconst api = axios.create({baseURL: 'https://swapi.dev/api'});\r\n\r\nexport const apiGetPeople = async (page) => {\r\n  try{\r\n    const people = await api.get(`/people/?page=${page}`);\r\n    \r\n    return people.data;\r\n  } catch (error) {\r\n    console.error(error || 'Erro ao buscar dados dos personagens.');\r\n    return ;\r\n  }\r\n};\r\n\r\nexport const apiGetSpecificPlanet = async (planetId) => {\r\n  try {\r\n    const planet = await api.get(`/planets/${planetId}`);\r\n\r\n    return planet.data;\r\n  } catch (error) {\r\n    console.error(error || 'Erro ao buscar dados do planeta.');\r\n    return ;\r\n  }\r\n}","import { apiGetPeople, apiGetSpecificPlanet } from \"./swapiAdapters\";\r\n\r\n/* coleta dados para a página PEOPLE */\r\nexport const fetchPeoplePage = async (page = 1) => {\r\n  const people = await apiGetPeople(page);\r\n\r\n  /* coleta informações específicas dos personagens */\r\n  const characters = people.results.map((character) => {\r\n    const id = character.url.split('/');\r\n    const charId = id[5];\r\n\r\n    const worldId = character.homeworld.split('/')[5];\r\n    //const worldId = !!world[5] ? world[5] : 'DESCONHECIDO';\r\n\r\n    return ({\r\n      id: charId,\r\n      name: character.name.toUpperCase(),\r\n      birth_year: character.birth_year === 'unknown' ? 'DESCONHECIDO' : character.birth_year.toUpperCase(),\r\n      homeworld_id: worldId,\r\n      homeworld: ''\r\n    });\r\n  });\r\n\r\n  /* coleta mundo de cada personagem (consultas individuais na API) */\r\n  // for (const char of characters) {\r\n  //   const worldInfo = await apiGetSpecificPlanet(char.homeworld_id);\r\n  //   char.homeworld = worldInfo.name.toUpperCase();\r\n  // }\r\n\r\n  /* filtra mundos únicos na lista de personagens coletada */\r\n  const worldsList = characters.map( char => char.homeworld_id);\r\n  const filteredworldsList = worldsList.filter( (world, index) => worldsList.indexOf(world) === index);\r\n\r\n  /* coleta dados dos mundos */\r\n  let filteredWorldsInfo = [];\r\n  for (const world of filteredworldsList) {\r\n    const worldInfo = await apiGetSpecificPlanet(world);\r\n    filteredWorldsInfo.push({name: worldInfo.name, id: worldInfo.url.split('/')[5]});\r\n  }\r\n\r\n  /* atribui nome do mundo ao homeworld do personagem */\r\n  for (const char of characters) {\r\n    for (const world of filteredWorldsInfo) {\r\n      if (char.homeworld_id === world.id) {\r\n        char.homeworld = world.name === 'unknown' ? 'DESCONHECIDO' : world.name.toUpperCase();\r\n      }\r\n    }\r\n  }\r\n\r\n  return ({\r\n    next: people.next,\r\n    results: characters\r\n  });\r\n};","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border: 2px solid gold;\r\n  border-radius: 7px;\r\n  padding: 1rem;\r\n  width: 30rem;\r\n  margin: 1rem;\r\n  background-color: black;\r\n`;\r\n\r\nconst Photo = styled.div`\r\n  width: fit-content;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  height: 100%;\r\n  margin-left: 1.5rem;\r\n`;\r\n\r\nconst CharName = styled.span`\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst CharDetail = styled.span`\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nconst CharacterCard = ( { id = 0, name = 'Character Name', homeworld = 'Home World', birth_year = 'Birth Year'} ) => {\r\n  return (\r\n    <Container>\r\n      <Photo>\r\n        <img src={`./img/char/${id}.jpg`} alt={`${name}`}></img>\r\n      </Photo>\r\n      <Info>\r\n        <CharName>{name}</CharName>\r\n        <CharDetail><span>PLANETA:</span> {homeworld}</CharDetail>\r\n        <CharDetail><span>NASCIMENTO:</span> {birth_year}</CharDetail>\r\n      </Info>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;","import { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { IoChevronDownOutline } from 'react-icons/io5';\r\nimport { fetchPeoplePage } from \"../adapters/swapiServices\";\r\nimport CharacterCard from \"../components/atoms/CharacterCard\";\r\n\r\nconst NUMBER_OF_CARDS = 9;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst CardsContainer = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst IconContainer = styled.span`\r\n  margin: auto;\r\n`;\r\n\r\nconst ChevronDown = styled(IoChevronDownOutline)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst PeoplePage = () => {\r\n  const [charactersList, setCharactersList] = useState([]);\r\n  const [exhibitionList, setExhibitionList] = useState([]);\r\n  const [apiPage, setApiPage] = useState(1);\r\n  const [exhibitionPage, setExhibitionPage] = useState(1);\r\n  const [nextApiPage, setNextApiPage] = useState(true);\r\n  \r\n\r\n  useEffect(() => {\r\n    const getCharacters = async () =>{\r\n      const people = await fetchPeoplePage(apiPage);\r\n      const newCharacters = people.results;\r\n\r\n      setCharactersList((charactersList) => [...charactersList, ...newCharacters]);\r\n      setNextApiPage(!!people.next);\r\n    }\r\n\r\n    getCharacters();\r\n  }, [apiPage]);\r\n\r\n\r\n  useEffect(() => {\r\n    let newExhibitionList = [];\r\n    charactersList.forEach( (char, index) => index < (exhibitionPage * NUMBER_OF_CARDS) ? newExhibitionList.push(char) : null);\r\n\r\n    setExhibitionList(newExhibitionList);\r\n  }, [exhibitionPage, charactersList]);\r\n\r\n\r\n  const handleNextPage = () => {\r\n    if ( (exhibitionPage + 1) * NUMBER_OF_CARDS > charactersList.length && nextApiPage) {\r\n      const newApiPage = apiPage + 1;\r\n      setApiPage(newApiPage);\r\n    }\r\n    const newExhibitionPage = exhibitionPage + 1;\r\n    setExhibitionPage(newExhibitionPage);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CardsContainer>\r\n        {\r\n          exhibitionList.map( (char) => {\r\n            return (\r\n              <CharacterCard\r\n                key = {char.id}\r\n                // id = {char.id}  --> id para foto dos pernagens\r\n                name = {char.name}\r\n                homeworld = {char.homeworld}\r\n                birth_year = {char.birth_year}\r\n              />\r\n            );\r\n          })\r\n        }\r\n      </CardsContainer>\r\n      <IconContainer>\r\n        {\r\n          nextApiPage || exhibitionList.length < charactersList.length\r\n          ? <ChevronDown size={'3em'} title={`Carregar página ${exhibitionPage + 1}`} onClick={handleNextPage}/>\r\n          : null\r\n        }\r\n      </IconContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PeoplePage;","import styled from 'styled-components';\r\nimport { IoConstructOutline } from 'react-icons/io5';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Construct = styled(IoConstructOutline)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 3rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst UnderConstruction = () =>{\r\n  return (\r\n    <Container>\r\n      <Construct size={'10em'} />\r\n      <Text>EM CONSTRUÇÃO</Text>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default UnderConstruction;","import styled from 'styled-components';\r\nimport UnderConstruction from '../components/atoms/UnderConstruction';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst PlanetsPage = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlanetsPage;","import styled from 'styled-components';\r\nimport UnderConstruction from '../components/atoms/UnderConstruction';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst StarshipsPage = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StarshipsPage;","import styled from 'styled-components';\r\nimport UnderConstruction from '../components/atoms/UnderConstruction';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst VehiclesPage = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VehiclesPage;","import styled from 'styled-components';\r\nimport UnderConstruction from '../components/atoms/UnderConstruction';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst FilmsPage = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FilmsPage;","import styled from 'styled-components';\r\nimport UnderConstruction from '../components/atoms/UnderConstruction';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst SpeciesPage = () => {\r\n  return (\r\n    <Container>\r\n      <UnderConstruction />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SpeciesPage;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Navigation from './components/atoms/Navigation';\nimport HomePage from './pages/HomePage';\nimport PeoplePage from './pages/PeoplePage';\nimport PlanetsPage from './pages/PlanetsPage';\nimport StarshipsPage from './pages/StarshipsPage';\nimport VehiclesPage from './pages/VehiclesPage';\nimport FilmsPage from './pages/FilmsPage';\nimport SpeciesPage from './pages/SpeciesPage';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 1rem;\n  margin: auto;\n  color: gold;\n`;\n\nconst AppContainer = styled.div`\n  overflow: auto;\n  height: 100vh;\n  width: 100vw;\n  background-color: black;\n  background-image: url('./img/background.jpg');\n  background-size: cover;\n`;\n\nfunction App() {\n\n  return (\n      <Router>\n        <AppContainer>\n          <Container>\n\n            <header>\n              <Navigation />\n            </header>\n\n            <main>\n              <Switch>\n                <Route path='/people' component={PeoplePage} />\n                <Route path='/planets' component={PlanetsPage} />\n                <Route path='/starships' component={StarshipsPage} />\n                <Route path='/vehicles' component={VehiclesPage} />\n                <Route path='/films' component={FilmsPage} />\n                <Route path='/species' component={SpeciesPage} />\n                <Route path='/' component={HomePage} />\n              </Switch>\n            </main>\n\n          </Container>\n        </AppContainer>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}